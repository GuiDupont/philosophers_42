==14990== Memcheck, a memory error detector
==14990== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==14990== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==14990== Command: ./philosophers_42 4 310 200 100
==14990== Parent PID: 1918
==14990== 
--14990-- 
--14990-- Valgrind options:
--14990--    --leak-check=full
--14990--    --show-leak-kinds=all
--14990--    --track-origins=yes
--14990--    --verbose
--14990--    --log-file=valgrind-out.txt
--14990-- Contents of /proc/version:
--14990--   Linux version 5.3.0-45-generic (buildd@lcy01-amd64-027) (gcc version 7.5.0 (Ubuntu 7.5.0-3ubuntu1~18.04)) #37~18.04.1-Ubuntu SMP Fri Mar 27 15:58:10 UTC 2020
--14990-- 
--14990-- Arch and hwcaps: AMD64, LittleEndian, amd64-cx16-lzcnt-rdtscp-sse3-avx-avx2
--14990-- Page sizes: currently 4096, max supported 4096
--14990-- Valgrind library directory: /usr/lib/valgrind
--14990-- Reading syms from /home/user42/philosophers_42/philo_three/philosophers_42
--14990-- Reading syms from /lib/x86_64-linux-gnu/ld-2.27.so
--14990--   Considering /lib/x86_64-linux-gnu/ld-2.27.so ..
--14990--   .. CRC mismatch (computed 1b7c895e wanted 2943108a)
--14990--   Considering /usr/lib/debug/lib/x86_64-linux-gnu/ld-2.27.so ..
--14990--   .. CRC is valid
--14990-- Reading syms from /usr/lib/valgrind/memcheck-amd64-linux
--14990--   Considering /usr/lib/valgrind/memcheck-amd64-linux ..
--14990--   .. CRC mismatch (computed 41ddb025 wanted 9972f546)
--14990--    object doesn't have a symbol table
--14990--    object doesn't have a dynamic symbol table
--14990-- Scheduler: using generic scheduler lock implementation.
--14990-- Reading suppressions file: /usr/lib/valgrind/default.supp
==14990== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-14990-by-user42-on-???
==14990== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-14990-by-user42-on-???
==14990== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-14990-by-user42-on-???
==14990== 
==14990== TO CONTROL THIS PROCESS USING vgdb (which you probably
==14990== don't want to do, unless you know exactly what you're doing,
==14990== or are doing some strange experiment):
==14990==   /usr/lib/valgrind/../../bin/vgdb --pid=14990 ...command...
==14990== 
==14990== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==14990==   /path/to/gdb ./philosophers_42
==14990== and then give GDB the following command
==14990==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=14990
==14990== --pid is optional if only one valgrind process is running
==14990== 
--14990-- REDIR: 0x401f2f0 (ld-linux-x86-64.so.2:strlen) redirected to 0x580608c1 (???)
--14990-- REDIR: 0x401f0d0 (ld-linux-x86-64.so.2:index) redirected to 0x580608db (???)
--14990-- Reading syms from /usr/lib/valgrind/vgpreload_core-amd64-linux.so
--14990--   Considering /usr/lib/valgrind/vgpreload_core-amd64-linux.so ..
--14990--   .. CRC mismatch (computed 50df1b30 wanted 4800a4cf)
--14990--    object doesn't have a symbol table
--14990-- Reading syms from /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so
--14990--   Considering /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so ..
--14990--   .. CRC mismatch (computed f893b962 wanted 95ee359e)
--14990--    object doesn't have a symbol table
==14990== WARNING: new redirection conflicts with existing -- ignoring it
--14990--     old: 0x0401f2f0 (strlen              ) R-> (0000.0) 0x580608c1 ???
--14990--     new: 0x0401f2f0 (strlen              ) R-> (2007.0) 0x04c32db0 strlen
--14990-- REDIR: 0x401d360 (ld-linux-x86-64.so.2:strcmp) redirected to 0x4c33ee0 (strcmp)
--14990-- REDIR: 0x401f830 (ld-linux-x86-64.so.2:mempcpy) redirected to 0x4c374f0 (mempcpy)
--14990-- Reading syms from /lib/x86_64-linux-gnu/libpthread-2.27.so
--14990--   Considering /usr/lib/debug/.build-id/28/c6aade70b2d40d1f0f3d0a1a0cad1ab816448f.debug ..
--14990--   .. build-id is valid
--14990-- Reading syms from /lib/x86_64-linux-gnu/libc-2.27.so
--14990--   Considering /lib/x86_64-linux-gnu/libc-2.27.so ..
--14990--   .. CRC mismatch (computed b1c74187 wanted 042cc048)
--14990--   Considering /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.27.so ..
--14990--   .. CRC is valid
--14990-- REDIR: 0x50f9c70 (libc.so.6:memmove) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--14990-- REDIR: 0x50f8d40 (libc.so.6:strncpy) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--14990-- REDIR: 0x50f9f50 (libc.so.6:strcasecmp) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--14990-- REDIR: 0x50f8790 (libc.so.6:strcat) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--14990-- REDIR: 0x50f8d70 (libc.so.6:rindex) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--14990-- REDIR: 0x50fb7c0 (libc.so.6:rawmemchr) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--14990-- REDIR: 0x50f9de0 (libc.so.6:mempcpy) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--14990-- REDIR: 0x50f9c10 (libc.so.6:bcmp) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--14990-- REDIR: 0x50f8d00 (libc.so.6:strncmp) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--14990-- REDIR: 0x50f8800 (libc.so.6:strcmp) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--14990-- REDIR: 0x50f9d40 (libc.so.6:memset) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--14990-- REDIR: 0x51170f0 (libc.so.6:wcschr) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--14990-- REDIR: 0x50f8ca0 (libc.so.6:strnlen) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--14990-- REDIR: 0x50f8870 (libc.so.6:strcspn) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--14990-- REDIR: 0x50f9fa0 (libc.so.6:strncasecmp) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--14990-- REDIR: 0x50f8840 (libc.so.6:strcpy) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--14990-- REDIR: 0x50fa0e0 (libc.so.6:memcpy@@GLIBC_2.14) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--14990-- REDIR: 0x50f8da0 (libc.so.6:strpbrk) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--14990-- REDIR: 0x50f87c0 (libc.so.6:index) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--14990-- REDIR: 0x50f8c70 (libc.so.6:strlen) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--14990-- REDIR: 0x51036c0 (libc.so.6:memrchr) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--14990-- REDIR: 0x50f9ff0 (libc.so.6:strcasecmp_l) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--14990-- REDIR: 0x50f9be0 (libc.so.6:memchr) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--14990-- REDIR: 0x5117eb0 (libc.so.6:wcslen) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--14990-- REDIR: 0x50f9050 (libc.so.6:strspn) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--14990-- REDIR: 0x50f9f20 (libc.so.6:stpncpy) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--14990-- REDIR: 0x50f9ef0 (libc.so.6:stpcpy) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--14990-- REDIR: 0x50fb7f0 (libc.so.6:strchrnul) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--14990-- REDIR: 0x50fa040 (libc.so.6:strncasecmp_l) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--14990-- REDIR: 0x51e93c0 (libc.so.6:__strrchr_avx2) redirected to 0x4c32730 (rindex)
--14990-- REDIR: 0x50f2070 (libc.so.6:malloc) redirected to 0x4c2faa0 (malloc)
--14990-- REDIR: 0x51e9590 (libc.so.6:__strlen_avx2) redirected to 0x4c32cf0 (strlen)
--14990-- REDIR: 0x51e8fa0 (libc.so.6:__strchr_avx2) redirected to 0x4c32950 (index)
--14990-- REDIR: 0x51e9ab0 (libc.so.6:__mempcpy_avx_unaligned_erms) redirected to 0x4c37130 (mempcpy)
--14990-- REDIR: 0x51e9ad0 (libc.so.6:__memcpy_avx_unaligned_erms) redirected to 0x4c366e0 (memmove)
==14990== Syscall param write(buf) points to uninitialised byte(s)
==14990==    at 0x4E4D281: write (write.c:27)
==14990==    by 0x4E4C268: sem_open (sem_open.c:269)
==14990==    by 0x10951E: set_up_sem (in /home/user42/philosophers_42/philo_three/philosophers_42)
==14990==    by 0x109601: set_up_philos (in /home/user42/philosophers_42/philo_three/philosophers_42)
==14990==    by 0x108DBC: main (in /home/user42/philosophers_42/philo_three/philosophers_42)
==14990==  Address 0x1ffefffddc is on thread 1's stack
==14990==  in frame #1, created by sem_open (sem_open.c:141)
==14990==  Uninitialised value was created by a stack allocation
==14990==    at 0x4E4BF34: sem_open (sem_open.c:141)
==14990== 
==14990== Syscall param write(buf) points to uninitialised byte(s)
==14990==    at 0x4E4D281: write (write.c:27)
==14990==    by 0x4E4C268: sem_open (sem_open.c:269)
==14990==    by 0x109631: set_up_philos (in /home/user42/philosophers_42/philo_three/philosophers_42)
==14990==    by 0x108DBC: main (in /home/user42/philosophers_42/philo_three/philosophers_42)
==14990==  Address 0x1ffefffe0c is on thread 1's stack
==14990==  in frame #1, created by sem_open (sem_open.c:141)
==14990==  Uninitialised value was created by a stack allocation
==14990==    at 0x4E4BF34: sem_open (sem_open.c:141)
==14990== 
--14992-- REDIR: 0x50f5030 (libc.so.6:calloc) redirected to 0x4c31a70 (calloc)
==14992== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-14992-by-user42-on-???
==14992== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-14992-by-user42-on-???
==14992== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-14992-by-user42-on-???
==14992== 
==14992== TO CONTROL THIS PROCESS USING vgdb (which you probably
==14992== don't want to do, unless you know exactly what you're doing,
==14992== or are doing some strange experiment):
==14992==   /usr/lib/valgrind/../../bin/vgdb --pid=14992 ...command...
==14992== 
==14992== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==14992==   /path/to/gdb ./philosophers_42
==14992== and then give GDB the following command
==14992==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=14992
==14992== --pid is optional if only one valgrind process is running
==14992== 
--14994-- REDIR: 0x50f5030 (libc.so.6:calloc) redirected to 0x4c31a70 (calloc)
--14995-- REDIR: 0x50f5030 (libc.so.6:calloc) redirected to 0x4c31a70 (calloc)
--14993-- REDIR: 0x50f5030 (libc.so.6:calloc) redirected to 0x4c31a70 (calloc)
==14994== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-14994-by-user42-on-???
==14994== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-14994-by-user42-on-???
==14994== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-14994-by-user42-on-???
==14994== 
==14994== TO CONTROL THIS PROCESS USING vgdb (which you probably
==14994== don't want to do, unless you know exactly what you're doing,
==14994== or are doing some strange experiment):
==14994==   /usr/lib/valgrind/../../bin/vgdb --pid=14994 ...command...
==14994== 
==14994== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==14994==   /path/to/gdb ./philosophers_42
==14994== and then give GDB the following command
==14994==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=14994
==14994== --pid is optional if only one valgrind process is running
==14994== 
==14995== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-14995-by-user42-on-???
==14995== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-14995-by-user42-on-???
==14995== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-14995-by-user42-on-???
==14995== 
==14995== TO CONTROL THIS PROCESS USING vgdb (which you probably
==14995== don't want to do, unless you know exactly what you're doing,
==14995== or are doing some strange experiment):
==14995==   /usr/lib/valgrind/../../bin/vgdb --pid=14995 ...command...
==14995== 
==14995== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==14995==   /path/to/gdb ./philosophers_42
==14995== and then give GDB the following command
==14995==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=14995
==14995== --pid is optional if only one valgrind process is running
==14995== 
==14993== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-14993-by-user42-on-???
==14993== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-14993-by-user42-on-???
==14993== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-14993-by-user42-on-???
==14993== 
==14993== TO CONTROL THIS PROCESS USING vgdb (which you probably
==14993== don't want to do, unless you know exactly what you're doing,
==14993== or are doing some strange experiment):
==14993==   /usr/lib/valgrind/../../bin/vgdb --pid=14993 ...command...
==14993== 
==14993== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==14993==   /path/to/gdb ./philosophers_42
==14993== and then give GDB the following command
==14993==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=14993
==14993== --pid is optional if only one valgrind process is running
==14993== 
--14994-- REDIR: 0x50f2950 (libc.so.6:free) redirected to 0x4c30cd0 (free)
==14994== 
==14994== HEAP SUMMARY:
==14994==     in use at exit: 788 bytes in 7 blocks
==14994==   total heap usage: 7 allocs, 0 frees, 788 bytes allocated
==14994== 
==14994== Searching for pointers to 7 not-freed blocks
==14994== Checked 8,486,232 bytes
==14994== 
==14994== 16 bytes in 1 blocks are still reachable in loss record 1 of 7
==14994==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==14994==    by 0x108CD7: run_simulation (in /home/user42/philosophers_42/philo_three/philosophers_42)
==14994==    by 0x108DE4: main (in /home/user42/philosophers_42/philo_three/philosophers_42)
==14994== 
==14994== 24 bytes in 1 blocks are still reachable in loss record 2 of 7
==14994==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==14994==    by 0x5178483: tsearch (tsearch.c:338)
==14994==    by 0x4E4BE7D: check_add_mapping (sem_open.c:113)
==14994==    by 0x4E4C3E2: sem_open (sem_open.c:302)
==14994==    by 0x10951E: set_up_sem (in /home/user42/philosophers_42/philo_three/philosophers_42)
==14994==    by 0x109601: set_up_philos (in /home/user42/philosophers_42/philo_three/philosophers_42)
==14994==    by 0x108DBC: main (in /home/user42/philosophers_42/philo_three/philosophers_42)
==14994== 
==14994== 24 bytes in 1 blocks are still reachable in loss record 3 of 7
==14994==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==14994==    by 0x5178483: tsearch (tsearch.c:338)
==14994==    by 0x4E4BE7D: check_add_mapping (sem_open.c:113)
==14994==    by 0x4E4C3E2: sem_open (sem_open.c:302)
==14994==    by 0x109631: set_up_philos (in /home/user42/philosophers_42/philo_three/philosophers_42)
==14994==    by 0x108DBC: main (in /home/user42/philosophers_42/philo_three/philosophers_42)
==14994== 
==14994== 34 bytes in 1 blocks are still reachable in loss record 4 of 7
==14994==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==14994==    by 0x4E4BE19: check_add_mapping (sem_open.c:96)
==14994==    by 0x4E4C3E2: sem_open (sem_open.c:302)
==14994==    by 0x10951E: set_up_sem (in /home/user42/philosophers_42/philo_three/philosophers_42)
==14994==    by 0x109601: set_up_philos (in /home/user42/philosophers_42/philo_three/philosophers_42)
==14994==    by 0x108DBC: main (in /home/user42/philosophers_42/philo_three/philosophers_42)
==14994== 
==14994== 34 bytes in 1 blocks are still reachable in loss record 5 of 7
==14994==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==14994==    by 0x4E4BE19: check_add_mapping (sem_open.c:96)
==14994==    by 0x4E4C3E2: sem_open (sem_open.c:302)
==14994==    by 0x109631: set_up_philos (in /home/user42/philosophers_42/philo_three/philosophers_42)
==14994==    by 0x108DBC: main (in /home/user42/philosophers_42/philo_three/philosophers_42)
==14994== 
==14994== 272 bytes in 1 blocks are possibly lost in loss record 6 of 7
==14994==    at 0x4C31B25: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==14994==    by 0x40134A6: allocate_dtv (dl-tls.c:286)
==14994==    by 0x40134A6: _dl_allocate_tls (dl-tls.c:530)
==14994==    by 0x4E44227: allocate_stack (allocatestack.c:627)
==14994==    by 0x4E44227: pthread_create@@GLIBC_2.2.5 (pthread_create.c:644)
==14994==    by 0x1099B2: launch_watcher (in /home/user42/philosophers_42/philo_three/philosophers_42)
==14994==    by 0x108BEC: launch_philo (in /home/user42/philosophers_42/philo_three/philosophers_42)
==14994==    by 0x108D05: run_simulation (in /home/user42/philosophers_42/philo_three/philosophers_42)
==14994==    by 0x108DE4: main (in /home/user42/philosophers_42/philo_three/philosophers_42)
==14994== 
==14994== 384 bytes in 1 blocks are still reachable in loss record 7 of 7
==14994==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==14994==    by 0x1095E3: set_up_philos (in /home/user42/philosophers_42/philo_three/philosophers_42)
==14994==    by 0x108DBC: main (in /home/user42/philosophers_42/philo_three/philosophers_42)
==14994== 
==14994== LEAK SUMMARY:
==14994==    definitely lost: 0 bytes in 0 blocks
==14994==    indirectly lost: 0 bytes in 0 blocks
==14994==      possibly lost: 272 bytes in 1 blocks
==14994==    still reachable: 516 bytes in 6 blocks
==14994==         suppressed: 0 bytes in 0 blocks
==14994== 
==14994== ERROR SUMMARY: 3 errors from 3 contexts (suppressed: 0 from 0)
==14994== 
==14994== 1 errors in context 1 of 3:
==14994== Syscall param write(buf) points to uninitialised byte(s)
==14994==    at 0x4E4D281: write (write.c:27)
==14994==    by 0x4E4C268: sem_open (sem_open.c:269)
==14994==    by 0x109631: set_up_philos (in /home/user42/philosophers_42/philo_three/philosophers_42)
==14994==    by 0x108DBC: main (in /home/user42/philosophers_42/philo_three/philosophers_42)
==14994==  Address 0x1ffefffe0c is on thread 1's stack
==14994==  in frame #1, created by sem_open (sem_open.c:141)
==14994==  Uninitialised value was created by a stack allocation
==14994==    at 0x4E4BF34: sem_open (sem_open.c:141)
==14994== 
==14994== 
==14994== 1 errors in context 2 of 3:
==14994== Syscall param write(buf) points to uninitialised byte(s)
==14994==    at 0x4E4D281: write (write.c:27)
==14994==    by 0x4E4C268: sem_open (sem_open.c:269)
==14994==    by 0x10951E: set_up_sem (in /home/user42/philosophers_42/philo_three/philosophers_42)
==14994==    by 0x109601: set_up_philos (in /home/user42/philosophers_42/philo_three/philosophers_42)
==14994==    by 0x108DBC: main (in /home/user42/philosophers_42/philo_three/philosophers_42)
==14994==  Address 0x1ffefffddc is on thread 1's stack
==14994==  in frame #1, created by sem_open (sem_open.c:141)
==14994==  Uninitialised value was created by a stack allocation
==14994==    at 0x4E4BF34: sem_open (sem_open.c:141)
==14994== 
==14994== ERROR SUMMARY: 3 errors from 3 contexts (suppressed: 0 from 0)
--14990-- REDIR: 0x50f2950 (libc.so.6:free) redirected to 0x4c30cd0 (free)
--14990-- REDIR: 0x51c4d60 (libc.so.6:__strcmp_ssse3) redirected to 0x4c33da0 (strcmp)
==14990== 
==14990== HEAP SUMMARY:
==14990==     in use at exit: 0 bytes in 0 blocks
==14990==   total heap usage: 6 allocs, 6 frees, 516 bytes allocated
==14990== 
==14990== All heap blocks were freed -- no leaks are possible
==14990== 
==14990== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
==14990== 
==14990== 1 errors in context 1 of 2:
==14990== Syscall param write(buf) points to uninitialised byte(s)
==14990==    at 0x4E4D281: write (write.c:27)
==14990==    by 0x4E4C268: sem_open (sem_open.c:269)
==14990==    by 0x109631: set_up_philos (in /home/user42/philosophers_42/philo_three/philosophers_42)
==14990==    by 0x108DBC: main (in /home/user42/philosophers_42/philo_three/philosophers_42)
==14990==  Address 0x1ffefffe0c is on thread 1's stack
==14990==  in frame #1, created by sem_open (sem_open.c:141)
==14990==  Uninitialised value was created by a stack allocation
==14990==    at 0x4E4BF34: sem_open (sem_open.c:141)
==14990== 
==14990== 
==14990== 1 errors in context 2 of 2:
==14990== Syscall param write(buf) points to uninitialised byte(s)
==14990==    at 0x4E4D281: write (write.c:27)
==14990==    by 0x4E4C268: sem_open (sem_open.c:269)
==14990==    by 0x10951E: set_up_sem (in /home/user42/philosophers_42/philo_three/philosophers_42)
==14990==    by 0x109601: set_up_philos (in /home/user42/philosophers_42/philo_three/philosophers_42)
==14990==    by 0x108DBC: main (in /home/user42/philosophers_42/philo_three/philosophers_42)
==14990==  Address 0x1ffefffddc is on thread 1's stack
==14990==  in frame #1, created by sem_open (sem_open.c:141)
==14990==  Uninitialised value was created by a stack allocation
==14990==    at 0x4E4BF34: sem_open (sem_open.c:141)
==14990== 
==14990== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
