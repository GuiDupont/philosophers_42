==20132== Memcheck, a memory error detector
==20132== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==20132== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==20132== Command: ./philosophers_42 5 310 200 100
==20132== Parent PID: 1915
==20132== 
--20132-- 
--20132-- Valgrind options:
--20132--    --leak-check=full
--20132--    --show-leak-kinds=all
--20132--    --track-origins=yes
--20132--    --verbose
--20132--    --log-file=valgrind-out.txt
--20132-- Contents of /proc/version:
--20132--   Linux version 5.3.0-45-generic (buildd@lcy01-amd64-027) (gcc version 7.5.0 (Ubuntu 7.5.0-3ubuntu1~18.04)) #37~18.04.1-Ubuntu SMP Fri Mar 27 15:58:10 UTC 2020
--20132-- 
--20132-- Arch and hwcaps: AMD64, LittleEndian, amd64-cx16-lzcnt-rdtscp-sse3-avx-avx2
--20132-- Page sizes: currently 4096, max supported 4096
--20132-- Valgrind library directory: /usr/lib/valgrind
--20132-- Reading syms from /home/user42/philosophers_42/philo_three/philosophers_42
--20132-- Reading syms from /lib/x86_64-linux-gnu/ld-2.27.so
--20132--   Considering /lib/x86_64-linux-gnu/ld-2.27.so ..
--20132--   .. CRC mismatch (computed 1b7c895e wanted 2943108a)
--20132--   Considering /usr/lib/debug/lib/x86_64-linux-gnu/ld-2.27.so ..
--20132--   .. CRC is valid
--20132-- Reading syms from /usr/lib/valgrind/memcheck-amd64-linux
--20132--   Considering /usr/lib/valgrind/memcheck-amd64-linux ..
--20132--   .. CRC mismatch (computed 41ddb025 wanted 9972f546)
--20132--    object doesn't have a symbol table
--20132--    object doesn't have a dynamic symbol table
--20132-- Scheduler: using generic scheduler lock implementation.
--20132-- Reading suppressions file: /usr/lib/valgrind/default.supp
==20132== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-20132-by-user42-on-???
==20132== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-20132-by-user42-on-???
==20132== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-20132-by-user42-on-???
==20132== 
==20132== TO CONTROL THIS PROCESS USING vgdb (which you probably
==20132== don't want to do, unless you know exactly what you're doing,
==20132== or are doing some strange experiment):
==20132==   /usr/lib/valgrind/../../bin/vgdb --pid=20132 ...command...
==20132== 
==20132== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==20132==   /path/to/gdb ./philosophers_42
==20132== and then give GDB the following command
==20132==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=20132
==20132== --pid is optional if only one valgrind process is running
==20132== 
--20132-- REDIR: 0x401f2f0 (ld-linux-x86-64.so.2:strlen) redirected to 0x580608c1 (???)
--20132-- REDIR: 0x401f0d0 (ld-linux-x86-64.so.2:index) redirected to 0x580608db (???)
--20132-- Reading syms from /usr/lib/valgrind/vgpreload_core-amd64-linux.so
--20132--   Considering /usr/lib/valgrind/vgpreload_core-amd64-linux.so ..
--20132--   .. CRC mismatch (computed 50df1b30 wanted 4800a4cf)
--20132--    object doesn't have a symbol table
--20132-- Reading syms from /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so
--20132--   Considering /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so ..
--20132--   .. CRC mismatch (computed f893b962 wanted 95ee359e)
--20132--    object doesn't have a symbol table
==20132== WARNING: new redirection conflicts with existing -- ignoring it
--20132--     old: 0x0401f2f0 (strlen              ) R-> (0000.0) 0x580608c1 ???
--20132--     new: 0x0401f2f0 (strlen              ) R-> (2007.0) 0x04c32db0 strlen
--20132-- REDIR: 0x401d360 (ld-linux-x86-64.so.2:strcmp) redirected to 0x4c33ee0 (strcmp)
--20132-- REDIR: 0x401f830 (ld-linux-x86-64.so.2:mempcpy) redirected to 0x4c374f0 (mempcpy)
--20132-- Reading syms from /lib/x86_64-linux-gnu/libpthread-2.27.so
--20132--   Considering /usr/lib/debug/.build-id/28/c6aade70b2d40d1f0f3d0a1a0cad1ab816448f.debug ..
--20132--   .. build-id is valid
--20132-- Reading syms from /lib/x86_64-linux-gnu/libc-2.27.so
--20132--   Considering /lib/x86_64-linux-gnu/libc-2.27.so ..
--20132--   .. CRC mismatch (computed b1c74187 wanted 042cc048)
--20132--   Considering /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.27.so ..
--20132--   .. CRC is valid
--20132-- REDIR: 0x50f9c70 (libc.so.6:memmove) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--20132-- REDIR: 0x50f8d40 (libc.so.6:strncpy) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--20132-- REDIR: 0x50f9f50 (libc.so.6:strcasecmp) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--20132-- REDIR: 0x50f8790 (libc.so.6:strcat) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--20132-- REDIR: 0x50f8d70 (libc.so.6:rindex) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--20132-- REDIR: 0x50fb7c0 (libc.so.6:rawmemchr) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--20132-- REDIR: 0x50f9de0 (libc.so.6:mempcpy) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--20132-- REDIR: 0x50f9c10 (libc.so.6:bcmp) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--20132-- REDIR: 0x50f8d00 (libc.so.6:strncmp) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--20132-- REDIR: 0x50f8800 (libc.so.6:strcmp) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--20132-- REDIR: 0x50f9d40 (libc.so.6:memset) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--20132-- REDIR: 0x51170f0 (libc.so.6:wcschr) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--20132-- REDIR: 0x50f8ca0 (libc.so.6:strnlen) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--20132-- REDIR: 0x50f8870 (libc.so.6:strcspn) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--20132-- REDIR: 0x50f9fa0 (libc.so.6:strncasecmp) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--20132-- REDIR: 0x50f8840 (libc.so.6:strcpy) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--20132-- REDIR: 0x50fa0e0 (libc.so.6:memcpy@@GLIBC_2.14) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--20132-- REDIR: 0x50f8da0 (libc.so.6:strpbrk) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--20132-- REDIR: 0x50f87c0 (libc.so.6:index) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--20132-- REDIR: 0x50f8c70 (libc.so.6:strlen) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--20132-- REDIR: 0x51036c0 (libc.so.6:memrchr) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--20132-- REDIR: 0x50f9ff0 (libc.so.6:strcasecmp_l) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--20132-- REDIR: 0x50f9be0 (libc.so.6:memchr) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--20132-- REDIR: 0x5117eb0 (libc.so.6:wcslen) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--20132-- REDIR: 0x50f9050 (libc.so.6:strspn) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--20132-- REDIR: 0x50f9f20 (libc.so.6:stpncpy) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--20132-- REDIR: 0x50f9ef0 (libc.so.6:stpcpy) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--20132-- REDIR: 0x50fb7f0 (libc.so.6:strchrnul) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--20132-- REDIR: 0x50fa040 (libc.so.6:strncasecmp_l) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--20132-- REDIR: 0x51e93c0 (libc.so.6:__strrchr_avx2) redirected to 0x4c32730 (rindex)
--20132-- REDIR: 0x50f2070 (libc.so.6:malloc) redirected to 0x4c2faa0 (malloc)
--20132-- REDIR: 0x51e9590 (libc.so.6:__strlen_avx2) redirected to 0x4c32cf0 (strlen)
--20132-- REDIR: 0x51e8fa0 (libc.so.6:__strchr_avx2) redirected to 0x4c32950 (index)
--20132-- REDIR: 0x51e9ab0 (libc.so.6:__mempcpy_avx_unaligned_erms) redirected to 0x4c37130 (mempcpy)
--20132-- REDIR: 0x51e9ad0 (libc.so.6:__memcpy_avx_unaligned_erms) redirected to 0x4c366e0 (memmove)
==20132== Syscall param write(buf) points to uninitialised byte(s)
==20132==    at 0x4E4D281: write (write.c:27)
==20132==    by 0x4E4C268: sem_open (sem_open.c:269)
==20132==    by 0x1094B6: set_up_sem (setup.c:50)
==20132==    by 0x109617: set_up_philos (setup.c:77)
==20132==    by 0x108E53: main (philosophers_42.c:70)
==20132==  Address 0x1ffefffddc is on thread 1's stack
==20132==  in frame #1, created by sem_open (sem_open.c:141)
==20132==  Uninitialised value was created by a stack allocation
==20132==    at 0x4E4BF34: sem_open (sem_open.c:141)
==20132== 
==20132== Syscall param write(buf) points to uninitialised byte(s)
==20132==    at 0x4E4D281: write (write.c:27)
==20132==    by 0x4E4C268: sem_open (sem_open.c:269)
==20132==    by 0x1094E0: set_up_sem (setup.c:51)
==20132==    by 0x109617: set_up_philos (setup.c:77)
==20132==    by 0x108E53: main (philosophers_42.c:70)
==20132==  Address 0x1ffefffddc is on thread 1's stack
==20132==  in frame #1, created by sem_open (sem_open.c:141)
==20132==  Uninitialised value was created by a stack allocation
==20132==    at 0x4E4BF34: sem_open (sem_open.c:141)
==20132== 
==20132== Syscall param write(buf) points to uninitialised byte(s)
==20132==    at 0x4E4D281: write (write.c:27)
==20132==    by 0x4E4C268: sem_open (sem_open.c:269)
==20132==    by 0x10950D: set_up_sem (setup.c:52)
==20132==    by 0x109617: set_up_philos (setup.c:77)
==20132==    by 0x108E53: main (philosophers_42.c:70)
==20132==  Address 0x1ffefffddc is on thread 1's stack
==20132==  in frame #1, created by sem_open (sem_open.c:141)
==20132==  Uninitialised value was created by a stack allocation
==20132==    at 0x4E4BF34: sem_open (sem_open.c:141)
==20132== 
--20137-- REDIR: 0x50f5030 (libc.so.6:calloc) redirected to 0x4c31a70 (calloc)
==20137== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-20137-by-user42-on-???
==20137== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-20137-by-user42-on-???
==20137== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-20137-by-user42-on-???
==20137== 
==20137== TO CONTROL THIS PROCESS USING vgdb (which you probably
==20137== don't want to do, unless you know exactly what you're doing,
==20137== or are doing some strange experiment):
==20137==   /usr/lib/valgrind/../../bin/vgdb --pid=20137 ...command...
==20137== 
==20137== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==20137==   /path/to/gdb ./philosophers_42
==20137== and then give GDB the following command
==20137==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=20137
==20137== --pid is optional if only one valgrind process is running
==20137== 
--20135-- REDIR: 0x50f5030 (libc.so.6:calloc) redirected to 0x4c31a70 (calloc)
--20136-- REDIR: 0x50f5030 (libc.so.6:calloc) redirected to 0x4c31a70 (calloc)
==20135== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-20135-by-user42-on-???
==20135== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-20135-by-user42-on-???
==20135== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-20135-by-user42-on-???
==20135== 
==20135== TO CONTROL THIS PROCESS USING vgdb (which you probably
==20135== don't want to do, unless you know exactly what you're doing,
==20135== or are doing some strange experiment):
==20135==   /usr/lib/valgrind/../../bin/vgdb --pid=20135 ...command...
==20135== 
==20135== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==20135==   /path/to/gdb ./philosophers_42
==20135== and then give GDB the following command
==20135==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=20135
==20135== --pid is optional if only one valgrind process is running
==20135== 
--20137-- REDIR: 0x50f2950 (libc.so.6:free) redirected to 0x4c30cd0 (free)
==20137== Thread 2:
==20137== Invalid free() / delete / delete[] / realloc()
==20137==    at 0x4C30D3B: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==20137==    by 0x10953E: free_all (setup.c:57)
==20137==    by 0x1099D3: watch_death (watcher.c:19)
==20137==    by 0x4E436DA: start_thread (pthread_create.c:463)
==20137==    by 0x517C88E: clone (clone.S:95)
==20137==  Address 0x544c088 is 72 bytes inside a block of size 360 alloc'd
==20137==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==20137==    by 0x1095EA: set_up_philos (setup.c:76)
==20137==    by 0x108E53: main (philosophers_42.c:70)
==20137== 
==20136== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-20136-by-user42-on-???
==20136== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-20136-by-user42-on-???
==20136== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-20136-by-user42-on-???
==20136== 
--20134-- REDIR: 0x50f5030 (libc.so.6:calloc) redirected to 0x4c31a70 (calloc)
==20136== TO CONTROL THIS PROCESS USING vgdb (which you probably
==20136== don't want to do, unless you know exactly what you're doing,
==20136== or are doing some strange experiment):
==20136==   /usr/lib/valgrind/../../bin/vgdb --pid=20136 ...command...
==20136== 
==20136== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==20136==   /path/to/gdb ./philosophers_42
==20136== and then give GDB the following command
==20136==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=20136
==20136== --pid is optional if only one valgrind process is running
==20136== 
==20134== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-20134-by-user42-on-???
==20134== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-20134-by-user42-on-???
==20134== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-20134-by-user42-on-???
==20134== 
==20134== TO CONTROL THIS PROCESS USING vgdb (which you probably
==20134== don't want to do, unless you know exactly what you're doing,
==20134== or are doing some strange experiment):
==20134==   /usr/lib/valgrind/../../bin/vgdb --pid=20134 ...command...
==20134== 
==20134== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==20134==   /path/to/gdb ./philosophers_42
==20134== and then give GDB the following command
==20134==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=20134
==20134== --pid is optional if only one valgrind process is running
==20134== 
--20137-- REDIR: 0x51c4d60 (libc.so.6:__strcmp_ssse3) redirected to 0x4c33da0 (strcmp)
--20138-- REDIR: 0x50f5030 (libc.so.6:calloc) redirected to 0x4c31a70 (calloc)
==20138== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-20138-by-user42-on-???
==20138== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-20138-by-user42-on-???
==20138== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-20138-by-user42-on-???
==20138== 
==20138== TO CONTROL THIS PROCESS USING vgdb (which you probably
==20138== don't want to do, unless you know exactly what you're doing,
==20138== or are doing some strange experiment):
==20138==   /usr/lib/valgrind/../../bin/vgdb --pid=20138 ...command...
==20138== 
==20138== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==20138==   /path/to/gdb ./philosophers_42
==20138== and then give GDB the following command
==20138==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=20138
==20138== --pid is optional if only one valgrind process is running
==20138== 
==20137== 
==20137== Process terminating with default action of signal 11 (SIGSEGV)
==20137==  Access not within mapped region at address 0x402A000
==20137==    at 0x4E4C7D2: __new_sem_wait_slow.constprop.0 (sem_waitcommon.c:201)
==20137==    by 0x10915C: print_log (logs.c:47)
==20137==    by 0x1097A3: eat (philos.c:7)
==20137==    by 0x109891: eat_sleep_think (philos.c:28)
==20137==    by 0x108C96: launch_philo (philosophers_42.c:17)
==20137==    by 0x108DA8: run_simulation (philosophers_42.c:48)
==20137==    by 0x108E7B: main (philosophers_42.c:74)
==20137==  If you believe this happened as a result of a stack
==20137==  overflow in your program's main thread (unlikely but
==20137==  possible), you can try to increase the size of the
==20137==  main thread stack using the --main-stacksize= flag.
==20137==  The main thread stack size used in this run was 8388608.
==20137== 
==20137== HEAP SUMMARY:
==20137==     in use at exit: 652 bytes in 3 blocks
==20137==   total heap usage: 9 allocs, 7 frees, 839 bytes allocated
==20137== 
==20137== Searching for pointers to 3 not-freed blocks
==20137== Checked 8,477,680 bytes
==20137== 
==20137== Thread 1:
==20137== 20 bytes in 1 blocks are still reachable in loss record 1 of 3
==20137==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==20137==    by 0x108D70: run_simulation (philosophers_42.c:45)
==20137==    by 0x108E7B: main (philosophers_42.c:74)
==20137== 
==20137== 272 bytes in 1 blocks are possibly lost in loss record 2 of 3
==20137==    at 0x4C31B25: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==20137==    by 0x40134A6: allocate_dtv (dl-tls.c:286)
==20137==    by 0x40134A6: _dl_allocate_tls (dl-tls.c:530)
==20137==    by 0x4E44227: allocate_stack (allocatestack.c:627)
==20137==    by 0x4E44227: pthread_create@@GLIBC_2.2.5 (pthread_create.c:644)
==20137==    by 0x109A0A: launch_watcher (watcher.c:28)
==20137==    by 0x108C70: launch_philo (philosophers_42.c:16)
==20137==    by 0x108DA8: run_simulation (philosophers_42.c:48)
==20137==    by 0x108E7B: main (philosophers_42.c:74)
==20137== 
==20137== 360 bytes in 1 blocks are still reachable in loss record 3 of 3
==20137==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==20137==    by 0x1095EA: set_up_philos (setup.c:76)
==20137==    by 0x108E53: main (philosophers_42.c:70)
==20137== 
==20137== LEAK SUMMARY:
==20137==    definitely lost: 0 bytes in 0 blocks
==20137==    indirectly lost: 0 bytes in 0 blocks
==20137==      possibly lost: 272 bytes in 1 blocks
==20137==    still reachable: 380 bytes in 2 blocks
==20137==         suppressed: 0 bytes in 0 blocks
==20137== 
==20137== ERROR SUMMARY: 5 errors from 5 contexts (suppressed: 0 from 0)
==20137== 
==20137== 1 errors in context 1 of 5:
==20137== Thread 2:
==20137== Invalid free() / delete / delete[] / realloc()
==20137==    at 0x4C30D3B: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==20137==    by 0x10953E: free_all (setup.c:57)
==20137==    by 0x1099D3: watch_death (watcher.c:19)
==20137==    by 0x4E436DA: start_thread (pthread_create.c:463)
==20137==    by 0x517C88E: clone (clone.S:95)
==20137==  Address 0x544c088 is 72 bytes inside a block of size 360 alloc'd
==20137==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==20137==    by 0x1095EA: set_up_philos (setup.c:76)
==20137==    by 0x108E53: main (philosophers_42.c:70)
==20137== 
==20137== 
==20137== 1 errors in context 2 of 5:
==20137== Thread 1:
==20137== Syscall param write(buf) points to uninitialised byte(s)
==20137==    at 0x4E4D281: write (write.c:27)
==20137==    by 0x4E4C268: sem_open (sem_open.c:269)
==20137==    by 0x10950D: set_up_sem (setup.c:52)
==20137==    by 0x109617: set_up_philos (setup.c:77)
==20137==    by 0x108E53: main (philosophers_42.c:70)
==20137==  Address 0x1ffefffddc is on thread 1's stack
==20137==  in frame #1, created by sem_open (sem_open.c:141)
==20137==  Uninitialised value was created by a stack allocation
==20137==    at 0x4E4BF34: sem_open (sem_open.c:141)
==20137== 
==20137== 
==20137== 1 errors in context 3 of 5:
==20137== Syscall param write(buf) points to uninitialised byte(s)
==20137==    at 0x4E4D281: write (write.c:27)
==20137==    by 0x4E4C268: sem_open (sem_open.c:269)
==20137==    by 0x1094E0: set_up_sem (setup.c:51)
==20137==    by 0x109617: set_up_philos (setup.c:77)
==20137==    by 0x108E53: main (philosophers_42.c:70)
==20137==  Address 0x1ffefffddc is on thread 1's stack
==20137==  in frame #1, created by sem_open (sem_open.c:141)
==20137==  Uninitialised value was created by a stack allocation
==20137==    at 0x4E4BF34: sem_open (sem_open.c:141)
==20137== 
==20137== 
==20137== 1 errors in context 4 of 5:
==20137== Syscall param write(buf) points to uninitialised byte(s)
==20137==    at 0x4E4D281: write (write.c:27)
==20137==    by 0x4E4C268: sem_open (sem_open.c:269)
==20137==    by 0x1094B6: set_up_sem (setup.c:50)
==20137==    by 0x109617: set_up_philos (setup.c:77)
==20137==    by 0x108E53: main (philosophers_42.c:70)
==20137==  Address 0x1ffefffddc is on thread 1's stack
==20137==  in frame #1, created by sem_open (sem_open.c:141)
==20137==  Uninitialised value was created by a stack allocation
==20137==    at 0x4E4BF34: sem_open (sem_open.c:141)
==20137== 
==20137== ERROR SUMMARY: 5 errors from 5 contexts (suppressed: 0 from 0)
--20132-- REDIR: 0x50f2950 (libc.so.6:free) redirected to 0x4c30cd0 (free)
--20132-- REDIR: 0x51c4d60 (libc.so.6:__strcmp_ssse3) redirected to 0x4c33da0 (strcmp)
==20132== 
==20132== HEAP SUMMARY:
==20132==     in use at exit: 0 bytes in 0 blocks
==20132==   total heap usage: 9 allocs, 9 frees, 1,591 bytes allocated
==20132== 
==20132== All heap blocks were freed -- no leaks are possible
==20132== 
==20132== ERROR SUMMARY: 3 errors from 3 contexts (suppressed: 0 from 0)
==20132== 
==20132== 1 errors in context 1 of 3:
==20132== Syscall param write(buf) points to uninitialised byte(s)
==20132==    at 0x4E4D281: write (write.c:27)
==20132==    by 0x4E4C268: sem_open (sem_open.c:269)
==20132==    by 0x10950D: set_up_sem (setup.c:52)
==20132==    by 0x109617: set_up_philos (setup.c:77)
==20132==    by 0x108E53: main (philosophers_42.c:70)
==20132==  Address 0x1ffefffddc is on thread 1's stack
==20132==  in frame #1, created by sem_open (sem_open.c:141)
==20132==  Uninitialised value was created by a stack allocation
==20132==    at 0x4E4BF34: sem_open (sem_open.c:141)
==20132== 
==20132== 
==20132== 1 errors in context 2 of 3:
==20132== Syscall param write(buf) points to uninitialised byte(s)
==20132==    at 0x4E4D281: write (write.c:27)
==20132==    by 0x4E4C268: sem_open (sem_open.c:269)
==20132==    by 0x1094E0: set_up_sem (setup.c:51)
==20132==    by 0x109617: set_up_philos (setup.c:77)
==20132==    by 0x108E53: main (philosophers_42.c:70)
==20132==  Address 0x1ffefffddc is on thread 1's stack
==20132==  in frame #1, created by sem_open (sem_open.c:141)
==20132==  Uninitialised value was created by a stack allocation
==20132==    at 0x4E4BF34: sem_open (sem_open.c:141)
==20132== 
==20132== 
==20132== 1 errors in context 3 of 3:
==20132== Syscall param write(buf) points to uninitialised byte(s)
==20132==    at 0x4E4D281: write (write.c:27)
==20132==    by 0x4E4C268: sem_open (sem_open.c:269)
==20132==    by 0x1094B6: set_up_sem (setup.c:50)
==20132==    by 0x109617: set_up_philos (setup.c:77)
==20132==    by 0x108E53: main (philosophers_42.c:70)
==20132==  Address 0x1ffefffddc is on thread 1's stack
==20132==  in frame #1, created by sem_open (sem_open.c:141)
==20132==  Uninitialised value was created by a stack allocation
==20132==    at 0x4E4BF34: sem_open (sem_open.c:141)
==20132== 
==20132== ERROR SUMMARY: 3 errors from 3 contexts (suppressed: 0 from 0)
